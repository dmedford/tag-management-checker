# Database Integration Examples
# PostgreSQL, Redis, MongoDB compatibility

services:
  # Main app with PostgreSQL
  - type: web
    name: tag-checker-with-db
    env: node
    buildCommand: npm install
    startCommand: npm run web
    envVars:
      - key: PORT
        value: 10000
      - key: NODE_ENV
        value: production
      - key: TARGET_ACCOUNT
        value: adtaxi
      - key: DATABASE_URL
        fromDatabase:
          name: tag-checker-db
          property: connectionString
      - key: REDIS_URL
        fromDatabase:
          name: tag-checker-redis
          property: connectionString
    domains:
      - checker.yourdomain.com
    autoDeploy: true

  # Background job processor
  - type: worker
    name: scan-processor
    env: node
    buildCommand: npm install
    startCommand: node workers/scan-processor.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: tag-checker-db
          property: connectionString
      - key: REDIS_URL
        fromDatabase:
          name: tag-checker-redis
          property: connectionString
    autoDeploy: true

  # Analytics API (separate service)
  - type: web
    name: analytics-api
    env: node
    buildCommand: |
      cd analytics-api
      npm install
    startCommand: |
      cd analytics-api
      npm start
    envVars:
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromDatabase:
          name: tag-checker-db
          property: connectionString
    domains:
      - analytics.yourdomain.com
    autoDeploy: true

databases:
  # PostgreSQL for main data
  - name: tag-checker-db
    databaseName: tagchecker
    user: admin
    plan: starter  # Free tier

  # Redis for caching and job queues
  - name: tag-checker-redis
    plan: starter  # Free tier